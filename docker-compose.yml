version: '3.7'

services:
  users_service:
    build: ./users_service
    networks:
      - redis-network
    depends_on:
      - db
      - redis-master
      - redis-slave
    environment:
      DATABASE_URL: "mysql2://root:password@db/users_service_development"
      REDIS_MASTER_URL: "redis://redis-master:6379/0"
      REDIS_SLAVE_URL: "redis://redis-slave:6379/0"
    volumes:
      - ./users_service:/app
    ports:
      - "3000:3000"

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: users_service_development
    ports:
      - '3306:3306'
    networks:
      - redis-network
    volumes:
      - mysql-data:/var/lib/mysql

  redis-master:
    image: redis:6-alpine
    networks:
      - redis-network
    volumes:
      - "./.data:/data"
    ports:
      - "6379:6379"

  redis-slave:
    image: redis:6-alpine
    networks:
      - redis-network
    command: redis-server --slaveof redis-master 6379
    links:
      - redis-master
    volumes:
      - "./.data:/data"

  # Instance 1
  redis-sentinel:
    build:
      context: ./redis-sentinel
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-slave
    links:
      - redis-master

  # Instance 2
  redis-sentinel2:
    build:
      context: ./redis-sentinel
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-slave
    links:
      - redis-master

  # Instance 3
  redis-sentinel3:
    build:
      context: ./redis-sentinel
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-slave
    links:
      - redis-master

networks:
  redis-network:
    driver: bridge

volumes:
  mysql-data:
